{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { map } from \"rxjs\";\nlet ProductService = class ProductService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.baseUrl = \"http://localhost:8080/api/products\";\n  }\n  getProductList() {\n    return this.httpClient(this.baseUrl).pipe(map(response => response._embedded.products));\n  }\n};\nProductService = __decorate([Injectable({\n  providedIn: 'root'\n})], ProductService);\nexport { ProductService };","map":{"version":3,"names":["Injectable","map","ProductService","constructor","httpClient","baseUrl","getProductList","pipe","response","_embedded","products","__decorate","providedIn"],"sources":["/home/mohsen/Documents/dev/java-projects/ecommerce-project/frontend/angular-ecommerce/src/app/services/product.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {map, Observable} from \"rxjs\";\nimport {Product} from \"../common/product\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  private baseUrl: string = \"http://localhost:8080/api/products\"\n\n  constructor(private httpClient: HttpClient) { }\n\n  getProductList(): Observable<Product>[] {\n    return this.httpClient<GetResponse>(this.baseUrl).pipe(\n      map(response => response._embedded.products)\n    );\n  }\n}\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAE1C,SAAQC,GAAG,QAAmB,MAAM;AAMpC,IAAaC,cAAc,GAA3B,MAAaA,cAAc;EAIzBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAFtB,KAAAC,OAAO,GAAW,oCAAoC;EAEhB;EAE9CC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACF,UAAU,CAAc,IAAI,CAACC,OAAO,CAAC,CAACE,IAAI,CACpDN,GAAG,CAACO,QAAQ,IAAIA,QAAQ,CAACC,SAAS,CAACC,QAAQ,CAAC,CAC7C;EACH;CACD;AAXYR,cAAc,GAAAS,UAAA,EAH1BX,UAAU,CAAC;EACVY,UAAU,EAAE;CACb,CAAC,C,EACWV,cAAc,CAW1B;SAXYA,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}