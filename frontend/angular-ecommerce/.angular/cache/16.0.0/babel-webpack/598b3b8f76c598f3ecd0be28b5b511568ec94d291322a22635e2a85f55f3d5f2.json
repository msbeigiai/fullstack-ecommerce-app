{"ast":null,"code":"import { map } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass ProductService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.baseUrl = \"http://localhost:8080/api/products\";\n    this.categoryUrl = \"http://localhost:8080/api/product-category\";\n  }\n  getProductList(categoryId) {\n    // @TODO\n    const searchUrl = `${this.baseUrl}/search/findByCategoryId?id=${categoryId}`;\n    return this.getProducts(searchUrl);\n  }\n  getProductCategoryList() {\n    return this.httpClient.get(this.categoryUrl).pipe(map(response => response._embedded.productCategory));\n  }\n  searchProduct(keyword) {\n    const searchUrl = `${this.baseUrl}/search/findByNameContaining?name=${keyword}`;\n    return this.getProducts(searchUrl);\n  }\n  getProducts(searchUrl) {\n    return this.httpClient.get(searchUrl).pipe(map(response => response._embedded.products));\n  }\n}\nProductService.ɵfac = function ProductService_Factory(t) {\n  return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n};\nProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductService,\n  factory: ProductService.ɵfac,\n  providedIn: 'root'\n});\nexport { ProductService };","map":{"version":3,"names":["map","ProductService","constructor","httpClient","baseUrl","categoryUrl","getProductList","categoryId","searchUrl","getProducts","getProductCategoryList","get","pipe","response","_embedded","productCategory","searchProduct","keyword","products","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/home/mohsen/Documents/dev/java-projects/ecommerce-project/frontend/angular-ecommerce/src/app/services/product.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {map, Observable} from \"rxjs\";\nimport {Product} from \"../common/product\";\nimport {ProductCategory} from \"../common/product-category\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  private baseUrl: string = \"http://localhost:8080/api/products\"\n  private categoryUrl: string = \"http://localhost:8080/api/product-category\"\n\n  constructor(private httpClient: HttpClient) { }\n\n  getProductList(categoryId: number): Observable<Product[]> {\n    // @TODO\n    const searchUrl = `${this.baseUrl}/search/findByCategoryId?id=${categoryId}`\n\n    return this.getProducts(searchUrl)\n  }\n\n  getProductCategoryList(): Observable<ProductCategory[]> {\n    return this.httpClient.get<GetResponseProductCategory>(this.categoryUrl).pipe(\n      map(response => response._embedded.productCategory)\n    );\n  }\n\n  searchProduct(keyword: string): Observable<Product[]> {\n    const searchUrl = `${this.baseUrl}/search/findByNameContaining?name=${keyword}`\n\n    return this.getProducts(searchUrl);\n  }\n\n  private getProducts(searchUrl: string) {\n    return this.httpClient.get<GetResponseProduct>(searchUrl).pipe(\n      map(response => response._embedded.products)\n    );\n  }\n}\n\ninterface GetResponseProduct {\n  _embedded: {\n    products: Product[]\n  }\n}\n\ninterface GetResponseProductCategory {\n  _embedded: {\n    productCategory: ProductCategory[]\n  }\n}\n"],"mappings":"AAEA,SAAQA,GAAG,QAAmB,MAAM;;;AAIpC,MAGaC,cAAc;EAKzBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAHtB,KAAAC,OAAO,GAAW,oCAAoC;IACtD,KAAAC,WAAW,GAAW,4CAA4C;EAE5B;EAE9CC,cAAcA,CAACC,UAAkB;IAC/B;IACA,MAAMC,SAAS,GAAG,GAAG,IAAI,CAACJ,OAAO,+BAA+BG,UAAU,EAAE;IAE5E,OAAO,IAAI,CAACE,WAAW,CAACD,SAAS,CAAC;EACpC;EAEAE,sBAAsBA,CAAA;IACpB,OAAO,IAAI,CAACP,UAAU,CAACQ,GAAG,CAA6B,IAAI,CAACN,WAAW,CAAC,CAACO,IAAI,CAC3EZ,GAAG,CAACa,QAAQ,IAAIA,QAAQ,CAACC,SAAS,CAACC,eAAe,CAAC,CACpD;EACH;EAEAC,aAAaA,CAACC,OAAe;IAC3B,MAAMT,SAAS,GAAG,GAAG,IAAI,CAACJ,OAAO,qCAAqCa,OAAO,EAAE;IAE/E,OAAO,IAAI,CAACR,WAAW,CAACD,SAAS,CAAC;EACpC;EAEQC,WAAWA,CAACD,SAAiB;IACnC,OAAO,IAAI,CAACL,UAAU,CAACQ,GAAG,CAAqBH,SAAS,CAAC,CAACI,IAAI,CAC5DZ,GAAG,CAACa,QAAQ,IAAIA,QAAQ,CAACC,SAAS,CAACI,QAAQ,CAAC,CAC7C;EACH;;AA9BWjB,cAAc,C;mBAAdA,cAAc,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAdrB,cAAc,C;SAAdA,cAAc;EAAAsB,OAAA,EAAdtB,cAAc,CAAAuB,IAAA;EAAAC,UAAA,EAFb;AAAM;SAEPxB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}